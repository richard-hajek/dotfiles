
#append_path ~/.local/apps

# https://wiki.archlinux.org/title/Debuginfod
# do NOT delete this line
# gdb will NOT be able to start using debuginfod if this variable is not set beforehand
export DEBUGINFOD_URLS="https://debuginfod.archlinux.org"

if hash chezmoi &> /dev/null; then
	( (
	OUTPUT=$(chezmoi status 2>&1)

	if [[ ! -z "${OUTPUT// }" ]]; then
		notify-send "Chezmoi" "$OUTPUT"
	fi

	) & )
fi

export LS_COLORS="di=34:ln=36:so=35:pi=35:ex=32:bd=35:cd=35:su=32:sg=32:tw=34:ow=34"
export BAT_STYLE="plain"

if [ -f /usr/share/nvm/init-nvm.sh ]; then
	source /usr/share/nvm/init-nvm.sh
fi

if [ -f /usr/share/z/z.sh  ]; then
    source /usr/share/z/z.sh
fi

if [ -d ~/.rye  ]; then
    export PATH="$PATH:$HOME/.rye/shims"
    source ~/.rye/env
fi

if hash pyenv &> /dev/null; then
	eval "$(pyenv init -)"
fi

if [[ $SHELL == "/bin/zsh" ]]; then
    if hash aws &> /dev/null; then
        complete -C $(which aws_completer) aws
    fi 
fi


ucat() {
  for file in "$@"; do
    if [[ ! -e "$file" ]]; then
      echo "File '$file' does not exist." >&2
      continue
    fi

    mime_type=$(file --mime-type -b "$file")

    case "$mime_type" in
      text/*|application/json|application/xml|application/javascript)
        bat "$file"
        ;;

      application/vnd.sqlite3)
        sqlite3 "$file" .dump
        ;;

      application/vnd.oasis.opendocument.spreadsheet)
        dest=$(mktemp -d)
        libreoffice --headless --convert-to csv --outdir "$dest" "$file" 1>&2 && \
        cat "$dest/$(basename $file .ods).csv"
        rm -rf $dest
        ;;

      application/x-tar|application/zip|application/x-gzip|application/x-bzip2|application/x-xz|application/vnd.rar)
        echo "-- Archive contents: $file --"
        atool -l "$file"
        ;;

      *)
        echo "Unsupported file type for '$file' (MIME: $mime_type)." >&2
        ;;
    esac
  done
}
